{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/course/[courseId]",
      "regex": "^/course/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPcourseId": "nxtPcourseId"
      },
      "namedRegex": "^/course/(?<nxtPcourseId>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/ChatBot",
      "regex": "^/ChatBot(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/ChatBot(?:/)?$"
    },
    {
      "page": "/CourseDetail",
      "regex": "^/CourseDetail(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/CourseDetail(?:/)?$"
    },
    {
      "page": "/Courses",
      "regex": "^/Courses(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/Courses(?:/)?$"
    },
    {
      "page": "/Games",
      "regex": "^/Games(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/Games(?:/)?$"
    },
    {
      "page": "/Index",
      "regex": "^/Index(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/Index(?:/)?$"
    },
    {
      "page": "/Login",
      "regex": "^/Login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/Login(?:/)?$"
    },
    {
      "page": "/NotFound",
      "regex": "^/NotFound(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/NotFound(?:/)?$"
    },
    {
      "page": "/Podcast",
      "regex": "^/Podcast(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/Podcast(?:/)?$"
    },
    {
      "page": "/RegistrationDetails",
      "regex": "^/RegistrationDetails(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/RegistrationDetails(?:/)?$"
    },
    {
      "page": "/SignUp",
      "regex": "^/SignUp(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/SignUp(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/billing-portal",
      "regex": "^/billing\\-portal(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/billing\\-portal(?:/)?$"
    },
    {
      "page": "/billingportal",
      "regex": "^/billingportal(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/billingportal(?:/)?$"
    },
    {
      "page": "/chatbot",
      "regex": "^/chatbot(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/chatbot(?:/)?$"
    },
    {
      "page": "/courses",
      "regex": "^/courses(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/courses(?:/)?$"
    },
    {
      "page": "/games",
      "regex": "^/games(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/games(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/podcast",
      "regex": "^/podcast(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/podcast(?:/)?$"
    },
    {
      "page": "/registration-details",
      "regex": "^/registration\\-details(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/registration\\-details(?:/)?$"
    },
    {
      "page": "/signup",
      "regex": "^/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": [
    {
      "source": "/",
      "destination": "/app",
      "regex": "^/(?:/)?$"
    }
  ]
}